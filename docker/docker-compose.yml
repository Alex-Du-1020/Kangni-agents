version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: kangni-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kangni_ai_chatbot
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "max_connections=200"]

  kangni-agents:
    build: 
      context: ..
      dockerfile: Dockerfile
    container_name: kangni-agents
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      # Database Configuration
      - DB_TYPE=postgresql
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=kangni_ai_chatbot
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/kangni_ai_chatbot
      # LLM Configuration (set these in .env file)
      - LLM_PROVIDER=deepseek
      - LLM_API_KEY=${DEEPSEEK_API_KEY:-your_deepseek_api_key}
      - LLM_BASE_URL=https://api.deepseek.com
      - LLM_CHAT_MODEL=deepseek-chat
      # RAG Configuration
      - RAGFLOW_MCP_SERVER_URL=${RAGFLOW_MCP_SERVER_URL:-http://158.58.50.45:9382/mcp}
      - RAGFLOW_DEFAULT_DATASET_ID=${RAGFLOW_DEFAULT_DATASET_ID:-f3073258886911f08bc30242c0a82006}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/qomo/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data: