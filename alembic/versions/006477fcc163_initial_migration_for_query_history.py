"""Initial migration for query history

Revision ID: 006477fcc163
Revises: 
Create Date: 2025-09-06 22:21:00.929854

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '006477fcc163'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('query_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('sql_query', sa.Text(), nullable=True),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('query_type', sa.String(length=50), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('llm_provider', sa.String(length=50), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_query_history_created_at'), 'query_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_query_history_session_id'), 'query_history', ['session_id'], unique=False)
    op.create_index(op.f('ix_query_history_user_email'), 'query_history', ['user_email'], unique=False)
    op.create_table('user_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('query_id', sa.Integer(), nullable=False),
    sa.Column('user_email', sa.String(length=255), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['query_id'], ['query_history.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_comments_user_email'), 'user_comments', ['user_email'], unique=False)
    op.create_table('user_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('query_id', sa.Integer(), nullable=False),
    sa.Column('user_email', sa.String(length=255), nullable=False),
    sa.Column('feedback_type', sa.Enum('LIKE', 'DISLIKE', name='feedbacktype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['query_id'], ['query_history.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_feedback_user_email'), 'user_feedback', ['user_email'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_feedback_user_email'), table_name='user_feedback')
    op.drop_table('user_feedback')
    op.drop_index(op.f('ix_user_comments_user_email'), table_name='user_comments')
    op.drop_table('user_comments')
    op.drop_index(op.f('ix_query_history_user_email'), table_name='query_history')
    op.drop_index(op.f('ix_query_history_session_id'), table_name='query_history')
    op.drop_index(op.f('ix_query_history_created_at'), table_name='query_history')
    op.drop_table('query_history')
    # ### end Alembic commands ###
